#pragma checksum "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "76d74302b68f4bb50df753f84ba1700b10d193ee"
// <auto-generated/>
#pragma warning disable 1591
namespace FreshShopBM.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using FreshShopBM.Shared;
    using Syncfusion.EJ2.RazorComponents;
    using Syncfusion.EJ2.RazorComponents.Calendars;
    using System.IO;
    using DevExpress.Blazor;
    using FreshShopBM.Data;
    using FreshShopBM.Data.Models;
    using FreshShopBM.Data.Services.ProductService;
    using Blazor.FileReader;
    using Telerik.Blazor;
    using Telerik.Blazor.Components.Window;
    using Telerik.Blazor.Components.Button;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/productManage")]
    public class ProductManage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.OpenElement(0, "div");
            builder.AddMarkupContent(1, "\r\n    ");
            builder.OpenElement(2, "div");
            builder.AddAttribute(3, "class", "d-flex flex-row");
            builder.AddMarkupContent(4, "\r\n        ");
            builder.AddMarkupContent(5, "<label>主分类：</label>\r\n        ");
            __Blazor.FreshShopBM.Pages.ProductManage.TypeInference.CreateDxComboBox_0(builder, 6, 7, mainCategories, 8, "Name", 9, mainCategory, 10, MainCategoryChanged);
            builder.AddMarkupContent(11, "\r\n        ");
            builder.AddMarkupContent(12, "<label class=\"ml-3\">子分类：</label>\r\n        ");
            __Blazor.FreshShopBM.Pages.ProductManage.TypeInference.CreateDxComboBox_1(builder, 13, 14, subCategories, 15, "Name", 16, subCategory, 17, SubCategoryChanged);
            builder.AddMarkupContent(18, "\r\n        \r\n        \r\n        \r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(19, "\r\n    ");
            builder.OpenElement(20, "div");
            builder.AddAttribute(21, "class", "mt-3");
            builder.AddMarkupContent(22, "\r\n");
#line 42 "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor"
         if (_products == null)
        {

#line default
#line hidden
            builder.AddContent(23, "            ");
            builder.AddMarkupContent(24, "<p><em>请选择分类列表</em></p>\r\n");
#line 45 "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor"
        }
        else
        {

#line default
#line hidden
            builder.AddContent(25, "            ");
            __Blazor.FreshShopBM.Pages.ProductManage.TypeInference.CreateDxDataGrid_2(builder, 26, 27, _products, 28, (dataItem) => OnRowRemoving(dataItem), 29, (updatingDataItem, newValues) => OnRowUpdating(updatingDataItem, newValues), 30, (newValues) => OnRowInserting(newValues), 31, (builder2) => {
                builder2.AddMarkupContent(32, "\r\n                ");
                builder2.OpenComponent<DevExpress.Blazor.DxDataGridColumn>(33);
                builder2.AddAttribute(34, "Field", "ProductId");
                builder2.AddAttribute(35, "Caption", "Id");
                builder2.AddAttribute(36, "Width", "100px");
                builder2.CloseComponent();
                builder2.AddMarkupContent(37, "\r\n                ");
                builder2.OpenComponent<DevExpress.Blazor.DxDataGridColumn>(38);
                builder2.AddAttribute(39, "Field", "ProductName");
                builder2.AddAttribute(40, "Caption", "产品名");
                builder2.CloseComponent();
                builder2.AddMarkupContent(41, "\r\n                ");
                builder2.OpenComponent<DevExpress.Blazor.DxDataGridColumn>(42);
                builder2.AddAttribute(43, "Field", "Unit");
                builder2.AddAttribute(44, "Caption", "单位");
                builder2.CloseComponent();
                builder2.AddMarkupContent(45, "  \r\n                ");
                builder2.OpenComponent<DevExpress.Blazor.DxDataGridColumn>(46);
                builder2.AddAttribute(47, "Field", "UnitPrice");
                builder2.AddAttribute(48, "Caption", "单价");
                builder2.CloseComponent();
                builder2.AddMarkupContent(49, "  \r\n                ");
                builder2.OpenComponent<DevExpress.Blazor.DxDataGridColumn>(50);
                builder2.AddAttribute(51, "Field", "MinOrderQuantity");
                builder2.AddAttribute(52, "Caption", "起购量");
                builder2.CloseComponent();
                builder2.AddMarkupContent(53, "\r\n                ");
                builder2.OpenComponent<DevExpress.Blazor.DxDataGridCommandColumn>(54);
                builder2.AddAttribute(55, "Width", "150px");
                builder2.CloseComponent();
                builder2.AddMarkupContent(56, "  \r\n            ");
            }
            );
            builder.AddMarkupContent(57, "\r\n            ");
            builder.OpenElement(58, "table");
            builder.AddAttribute(59, "class", "table");
            builder.AddMarkupContent(60, "\r\n                ");
            builder.AddMarkupContent(61, @"<thead>
                    <tr>
                        <th>Id</th>
                        <th>产品名</th>
                        <th>单位</th>
                        <th>单价</th>
                        <th>起购量</th>
                    </tr>
                </thead>
                ");
            builder.OpenElement(62, "tbody");
            builder.AddMarkupContent(63, "\r\n");
#line 75 "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor"
                     foreach (var product in _products)
                    {

#line default
#line hidden
            builder.AddContent(64, "                        ");
            builder.OpenElement(65, "tr");
            builder.AddMarkupContent(66, "\r\n                            ");
            builder.OpenElement(67, "td");
            builder.AddContent(68, product.ProductId.ToString());
            builder.CloseElement();
            builder.AddMarkupContent(69, "\r\n                            ");
            builder.OpenElement(70, "td");
            builder.AddContent(71, product.ProductName);
            builder.CloseElement();
            builder.AddMarkupContent(72, "\r\n                            ");
            builder.OpenElement(73, "td");
            builder.AddContent(74, product.Unit);
            builder.CloseElement();
            builder.AddMarkupContent(75, "\r\n                            ");
            builder.OpenElement(76, "td");
            builder.AddContent(77, product.UnitPrice);
            builder.CloseElement();
            builder.AddMarkupContent(78, "\r\n                            ");
            builder.OpenElement(79, "td");
            builder.AddContent(80, product.MinOrderQuantity);
            builder.CloseElement();
            builder.AddMarkupContent(81, "\r\n                            ");
            builder.OpenElement(82, "td");
            builder.AddMarkupContent(83, "\r\n                                ");
            builder.OpenElement(84, "button");
            builder.AddAttribute(85, "type", "button");
            builder.AddAttribute(86, "class", "btn btn-primary ml-2");
            builder.AddAttribute(87, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, () =>ModifyBtnClicked(product.ProductId)));
            builder.AddMarkupContent(88, "修改\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(89, "\r\n\r\n                                ");
            builder.OpenElement(90, "button");
            builder.AddAttribute(91, "type", "button");
            builder.AddAttribute(92, "class", "btn btn-primary ml-2");
            builder.AddAttribute(93, "data-id", product.ProductId);
            builder.AddMarkupContent(94, "删除\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(95, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(96, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(97, "\r\n");
#line 95 "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor"
                    }

#line default
#line hidden
            builder.AddContent(98, "                ");
            builder.CloseElement();
            builder.AddMarkupContent(99, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(100, "\r\n");
#line 98 "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor"
        }

#line default
#line hidden
            builder.AddContent(101, "        ");
            builder.OpenElement(102, "input");
            builder.AddAttribute(103, "type", "file");
            builder.AddAttribute(104, "id", "fileUpload");
            builder.AddAttribute(105, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, UploadFile));
            builder.AddElementReferenceCapture(106, (__value) => {
#line 99 "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor"
                                                fileUpload = __value;

#line default
#line hidden
            }
            );
            builder.CloseElement();
            builder.AddMarkupContent(107, "\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(108, "\r\n");
            builder.CloseElement();
            builder.AddMarkupContent(109, "\r\n\r\n");
            builder.AddMarkupContent(110, "<div>\r\n    \r\n</div>\r\n\r\n");
            builder.AddMarkupContent(111, "<style>\r\n    .horizontal {\r\n        display: flex;\r\n        flex-direction:row;\r\n        justify-content:start;\r\n        align-items:start;\r\n    }\r\n</style>");
        }
        #pragma warning restore 1998
#line 144 "c:\Users\Chi\FreshShopBM\Pages\ProductManage.razor"
           
    private List<MainCategoryModel> mainCategories;
    private SubCategoryModel[] subCategories;
    private MainCategoryModel mainCategory;
    private SubCategoryModel subCategory;
    private List<ProductsModel> _products;
    private ElementRef fileUpload;
    private bool _subCategorySelected = false;
    private bool WindowVisible;

    private string _token;
    protected override async Task OnInitAsync()
    {
        _token = GlobalSetting.Instance.AccessToken;
        mainCategories = await ProductService.GetMainCategoriesAsync(_token);
    }

    private async void MainCategoryChanged(MainCategoryModel model)
    {
        mainCategory = model;
        if (string.IsNullOrWhiteSpace(_token))
        {
            _token = GlobalSetting.Instance.AccessToken;
        }

        subCategories = await ProductService.GetSubCategoriesAsync(_token, model.Id);
        StateHasChanged();
    }

    private async void SubCategoryChanged(SubCategoryModel model)
    {
        subCategory = model;
        if (string.IsNullOrWhiteSpace(_token))
        {
            _token = GlobalSetting.Instance.AccessToken;
        }

        _products = await ProductService.GetProductsAsync(_token, model.Id);
        StateHasChanged();
        _subCategorySelected = true;
    }

    private void ModifyBtnClicked(Guid sender)
    {

    }

    private async Task UploadFile()
    {
        var files = await FileReaderService.CreateReference(fileUpload).EnumerateFilesAsync();
        var file = files.First();
        var a = files.Count();
        using (MemoryStream memoryStream = await files.First().CreateMemoryStreamAsync(4096))
        {
            byte[] bytes = memoryStream.ToArray();

            var imageData = $"data:image/jpg;base64,{Convert.ToBase64String(bytes)}";
            var response = ProductService.UploadImage(_token, imageData);
        }
    }

    private async void OnRowInserting(Dictionary<string, object> newValues)
    {
        var type = typeof(ProductsModel);
        var newProduct = new ProductsModel();
        newProduct.SubCategoryId = subCategory.Id;
        newProduct.PictureUrl = "https://www.alwayslight.cn/images/daBaiCai.jpg";
        foreach(var value in newValues)
        {
            var property = type.GetProperty(value.Key);
            if(property.PropertyType == typeof(double))
            {
                var data = Convert.ToDouble(value.Value);
                property.SetValue(newProduct, data);
            }
            else if(property.PropertyType == typeof(int))
            {
                var data = Convert.ToInt32(value.Value);
                property.SetValue(newProduct, data);
            }
            else
            {
                property.SetValue(newProduct, value.Value.ToString());
            }
        }
        await ProductService.AddOrUpdateProductAsync(_token, newProduct);
    }

    private async void OnRowRemoving(ProductsModel dataItem)
    {
        await ProductService.DeleteProductAsync(_token, dataItem.ProductId);
    }

    private async void OnRowUpdating(ProductsModel updatingDataItem, Dictionary<string, object> newValues)
    {
        var type = updatingDataItem.GetType();
        foreach(var value in newValues)
        {
            var property = type.GetProperty(value.Key);
            var propertyType = property.PropertyType;
            if(property.PropertyType == typeof(double))
            {
                var data = Convert.ToDouble(value.Value);
                property.SetValue(updatingDataItem, data);
            }
            else if(property.PropertyType == typeof(int))
            {
                var data = Convert.ToInt32(value.Value);
                property.SetValue(updatingDataItem, data);
            }
            else
            {
                property.SetValue(updatingDataItem, value.Value.ToString());
            }
        }

        await ProductService.AddOrUpdateProductAsync(_token, updatingDataItem);
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileReaderService FileReaderService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime IJSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private WeatherForecastService ForecastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IProductService ProductService { get; set; }
    }
}
namespace __Blazor.FreshShopBM.Pages.ProductManage
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateDxComboBox_0<T>(global::Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, T __arg2, int __seq3, global::System.Action<T> __arg3)
        {
        builder.OpenComponent<global::DevExpress.Blazor.DxComboBox<T>>(seq);
        builder.AddAttribute(__seq0, "Data", __arg0);
        builder.AddAttribute(__seq1, "TextFieldName", __arg1);
        builder.AddAttribute(__seq2, "SelectedItem", __arg2);
        builder.AddAttribute(__seq3, "SelectedItemChanged", __arg3);
        builder.CloseComponent();
        }
        public static void CreateDxComboBox_1<T>(global::Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.String __arg1, int __seq2, T __arg2, int __seq3, global::System.Action<T> __arg3)
        {
        builder.OpenComponent<global::DevExpress.Blazor.DxComboBox<T>>(seq);
        builder.AddAttribute(__seq0, "Data", __arg0);
        builder.AddAttribute(__seq1, "TextFieldName", __arg1);
        builder.AddAttribute(__seq2, "SelectedItem", __arg2);
        builder.AddAttribute(__seq3, "SelectedItemChanged", __arg3);
        builder.CloseComponent();
        }
        public static void CreateDxDataGrid_2<T>(global::Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<T> __arg0, int __seq1, global::System.Action<T> __arg1, int __seq2, global::System.Action<T, global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>> __arg2, int __seq3, global::System.Action<System.Collections.Generic.Dictionary<System.String, System.Object>> __arg3, int __seq4, global::Microsoft.AspNetCore.Components.RenderFragment __arg4)
        {
        builder.OpenComponent<global::DevExpress.Blazor.DxDataGrid<T>>(seq);
        builder.AddAttribute(__seq0, "Data", __arg0);
        builder.AddAttribute(__seq1, "RowRemoving", __arg1);
        builder.AddAttribute(__seq2, "RowUpdating", __arg2);
        builder.AddAttribute(__seq3, "RowInserting", __arg3);
        builder.AddAttribute(__seq4, "ChildContent", __arg4);
        builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
